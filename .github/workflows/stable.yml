name: Stable release
on:
    push:
        branches: stable

jobs:
    prepare-release:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Get release tag
              id: vars
              run: echo "releaseTag=$(git describe --tags `git rev-list --tags --max-count=1`)" >> $GITHUB_OUTPUT # Git has severe issues doing basic things https://gist.github.com/rponte/fdc0724dd984088606b0

            - name: Delete old duplicate releases
              run: gh release delete ${{steps.vars.outputs.releaseTag}} -y --cleanup-tag
              env:
                  GH_TOKEN: ${{secrets.GITHUB_TOKEN}}
              continue-on-error: true

            - name: Create stable release
              uses: ncipollo/release-action@v1
              env:
                  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
              with:
                  tag: ${{steps.vars.outputs.releaseTag}} 

    build:
        needs: prepare-release
        continue-on-error: true
        strategy:
            matrix:
                os: [windows-latest, ubuntu-latest, macos-latest]
                arch: [arm32, arm64, amd64]
                include:
                    - os: ubuntu-latest
                      cleanup: "rm -rf dist/*/ && rm -rf .icon*"

                    - os: macos-latest
                      cleanup: "rm -rf dist/*/ && rm -rf .icon* && rm dist/builder-debug.yml" 

                    - arch: arm64
                      os: windows-latest
                      flags: "--arm64 --windows"
                      target: "arm64-win"
                      cleanup: rm -rf dist/*/ &&
                          rm dist/builder-debug.yml &&
                          mv dist/*.exe.blockmap dist/ArmCord-Windows-ARM64.exe.blockmap &&
                          mv dist/*.exe dist/ArmCord-Windows-ARM64.exe # Windows ARM64 build has the same name as AMD64

                    - arch: amd64
                      os: windows-latest
                      flags: "--x64 --windows"
                      target: "amd64-win"
                      cleanup: rm -rf dist/*/ &&
                          rm dist/builder-debug.yml

                    - arch: arm64
                      os: ubuntu-latest
                      flags: "--arm64 --linux"
                      target: "arm64-linux"

                    - arch: arm32
                      os: ubuntu-latest
                      flags: "--armv7l --linux"
                      target: "arm32-linux"
                      cleanup: "rm -rf dist/*/ && rm -rf .icon*"

                    - arch: amd64
                      os: ubuntu-latest
                      flags: "--x64 --linux"
                      target: "amd64-linux"

                    - arch: arm64
                      os: macos-latest
                      flags: "--arm64 --macos"
                      target: "arm64-mac"

                    - arch: amd64
                      os: macos-latest
                      flags: "--x64 --macos"
                      target: "amd64-mac"

                exclude:
                    - arch: arm32 # Don't run 32 bit arm tasks.

        runs-on: ${{matrix.os}}
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Get release tag
              id: vars
              shell: bash # Windows (In GitHub actions) cannot run this command and get a correct output
              run: echo "releaseTag=$(git describe --tags $(git rev-list --tags --max-count=1))" >> $GITHUB_OUTPUT

            - name: Prepare PNPM
              uses: pnpm/action-setup@v4

            - name: Prepare Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 22
                  cache: pnpm

            - name: Install dependencies
              run: pnpm i

            - name: Build TypeScript
              run: pnpm build

            - name: Build Electron
              run: pnpm electron-builder ${{matrix.flags}}
              env:
                  GH_TOKEN: ${{secrets.GITHUB_TOKEN}}

            - name: Run OS-specific scripts
              shell: bash
              run: ${{matrix.cleanup}}

            - name: Upload artifact to release
              uses: ncipollo/release-action@v1
              env:
                  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
              with:
                  tag: ${{steps.vars.outputs.releaseTag}}
                  artifacts: dist/**/*
                  allowUpdates: true
