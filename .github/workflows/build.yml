name: Build
on: push
jobs:
    build:
        continue-on-error: true
        strategy:
            matrix:
                os: [macos-latest, ubuntu-latest, windows-latest]

        runs-on: ${{matrix.os}}
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Prepare PNPM
              uses: pnpm/action-setup@v4

            - name: Prepare Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 22
                  cache: pnpm

            - name: Install dependencies
              run: pnpm i

            - name: Build TypeScript
              run: pnpm build

            # SECTION - STABLE RELEASE

            - name: Build ArmCord # NOTE Stable Complete Build
              if: github.ref == 'refs/heads/stable'
              run: pnpm electron-builder -p always --x64 -- arm64 --universal
              env:
                  GH_TOKEN: ${{github.token}}

            - name: Publish Artifacts # NOTE - Stable Release
              if: github.ref == 'refs/heads/stable'
              run: pnpm electron-builder --publish
              env:
                  GH_TOKEN: ${{github.token}}
                  EP_DRAFT: false

            # SECTION - DEV BUILD

            - name: Get short commit hash
              if: github.ref == 'refs/heads/dev'
              id: vars
              run: echo "sha_short=$(git rev-parse --short "$GITHUB_SHA")" >> $GITHUB_OUTPUT

            # NOTE - Delete the devbuild, regardless of whether the release is stable or not
            - name: Delete old devbuild
              run: gh release delete devbuild -y --cleanup-tag
              env:
                  GH_TOKEN: ${{secrets.GITHUB_TOKEN}}

            - name: Create release
              if: github.ref == 'refs/heads/dev'
              uses: ncipollo/release-action@v1
              env:
                  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
              with:
                  bodyFile: .github/release.md
                  name: Dev Build ${{steps.vars.outputs.sha_short}}
                  prerelease: true
                  draft: false
                  tag: devbuild
                  artifacts: release-files/**/*.zip
