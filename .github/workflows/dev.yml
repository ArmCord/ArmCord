name: Dev build
on:
    push:
        branches:
            - dev

env:
    FORCE_COLOR: true

jobs:
    build-linux:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - uses: pnpm/action-setup@v4

            - name: Use Node.js 22
              uses: actions/setup-node@v4
              with:
                  node-version: 22
                  cache: "pnpm"

            - name: Install Node dependencies
              run: pnpm i -g cargo-cp-artifact electron-builder && pnpm i
            - name: Build
              run: pnpm run build && electron-builder --linux zip && electron-builder --arm64 --linux zip

            - name: Upload artifact
              uses: actions/upload-artifact@v4
              with:
                  name: ArmCordLinux.zip
                  path: dist/armcord-3.3.0.zip
            - name: Upload artifact
              uses: actions/upload-artifact@v4
              with:
                  name: ArmCordLinuxArm64.zip
                  path: dist/

    build-mac:
        runs-on: macos-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - uses: pnpm/action-setup@v4

            - name: Use Node.js 22
              uses: actions/setup-node@v4
              with:
                  node-version: 22
                  cache: "pnpm"

            - name: Install Node dependencies
              run: pnpm i -g cargo-cp-artifact electron-builder && pnpm i

            - name: Build
              run: pnpm run build && electron-builder --macos --x64 --arm64
              env:
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Upload artifact
              uses: actions/upload-artifact@v4
              with:
                  name: ArmCordMac
                  path: dist/

    build-windows:
        runs-on: windows-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - uses: pnpm/action-setup@v4 # Install pnpm using packageManager key in package.json

            - name: Use Node.js 22
              uses: actions/setup-node@v4
              with:
                  node-version: 22
                  cache: "pnpm"

            - name: Install Node dependencies
              run: pnpm i -g cargo-cp-artifact electron-builder && pnpm i

            - name: Build
              run: pnpm run build && electron-builder --windows zip

            - name: Upload artifact
              uses: actions/upload-artifact@v4
              with:
                  name: ArmCordWindows.zip
                  path: dist/armcord-3.3.0-win.zip

    build-windowsOnARM:
        runs-on: windows-latest
        steps:
            - uses: actions/setup-node@v4
              with:
                  node-version: "22"

            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set architecture
              run: set npm_config_arch=arm64

            - uses: pnpm/action-setup@v4 # Install pnpm using packageManager key in package.json

            - name: Install Node dependencies
              run: pnpm i -g cargo-cp-artifact electron-builder && pnpm i

            - name: Build
              run: pnpm run build && electron-builder --windows zip --arm64
              env:
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Upload artifact
              uses: actions/upload-artifact@v4
              with:
                  name: ArmCordWindowsArm64.zip
                  path: dist\armcord-3.3.0-arm64-win.zip

    release:
        runs-on: ubuntu-latest
        needs: [build-linux, build-windows, build-windowsOnARM, build-mac]
        steps:
            - uses: actions/download-artifact@v4
              with:
                  path: release-files

            # FIXME - https://github.blog/changelog/2022-10-11-github-actions-deprecating-save-state-and-set-output-commands/
            - name: Get some values needed for the release
              id: vars
              shell: bash
              run: |
                  echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

            - run: gh release delete devbuild -y --cleanup-tag
              env:
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: find where the things are sob
              run: ls -laR

            - name: Create Release
              uses: ncipollo/release-action@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  bodyFile: .github/release.md
                  generateReleaseNotes: true
                  name: Dev Build ${{ steps.vars.outputs.sha_short }}
                  prerelease: true
                  tag: devbuild
                  artifacts: "release-files/*"
