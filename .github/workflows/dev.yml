name: Dev build
on: 
  push:
    branches:
      - dev

env:
  FORCE_COLOR: true

jobs:
    build-linux:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/setup-node@v3
              with:
                node-version: '18'

            - name: Checkout code
              uses: actions/checkout@v3

            - name: Install Node dependencies
              run: npm install

            - name: Install Electron-Builder
              run: npm install -g electron-builder

            - name: Replace the version number
              run: cat src/utils.ts | sed -e 's/[[:digit:]]\.[[:digit:]]\.[[:digit:]]/DEV/g' | tee src/utils.ts > /dev/null

            - name: Build
              run: npm run build && electron-builder --linux zip && electron-builder --arm64 --linux zip

            - name: Upload artifact
              uses: actions/upload-artifact@v2
              with:
                  name: ArmCordLinux.zip
                  path: dist/ArmCord-3.1.0.zip
            - name: Upload artifact
              uses: actions/upload-artifact@v2
              with:
                  name: ArmCordLinuxArm64.zip
                  path: dist/ArmCord-3.1.0-arm64.zip

    build-mac:
        runs-on: macos-latest

        steps:
            - uses: actions/setup-node@v3
              with:
                node-version: '18'

            - name: Checkout code
              uses: actions/checkout@v3

            - name: Install Node dependencies
              run: npm install
              
            - name: Install Electron-Builder
              run: npm install -g electron-builder

            - name: Replace the version number
              run: cat src/utils.ts | sed -e 's/[[:digit:]]\.[[:digit:]]\.[[:digit:]]/DEV/g' | tee src/utils.ts > /dev/null

            - name: Build
              run: npm run build && electron-builder --macos zip
              env:
                GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Upload artifact
              uses: actions/upload-artifact@v2
              with:
                  name: ArmCordMac.zip
                  path: dist/ArmCord-3.1.0-mac.zip

    build-windows:
        runs-on: windows-latest

        steps:
            - uses: actions/setup-node@v3
              with:
                node-version: '18'

            - name: Checkout code
              uses: actions/checkout@v3

            - name: Install Node dependencies
              run: npm install
              
            - name: Install Electron-Builder
              run: npm install -g electron-builder

            - name: Replace the version number
              run: (Get-Content src/utils.ts) -replace "\d\.\d\.\d", "DEV" | Out-File src/utils.ts

            - name: Build
              run: npm run build && electron-builder --windows zip

            - name: Upload artifact
              uses: actions/upload-artifact@v2
              with:
                  name: ArmCordWindows.zip
                  path: dist/ArmCord-3.1.0-win.zip
            

    release:
        runs-on: ubuntu-latest
        needs: [build-linux, build-mac, build-windows]

        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - uses: actions/download-artifact@v2
              with:
                  name: ArmCordMac.zip
                  path: macos

            - uses: actions/download-artifact@v2
              with:
                  name: ArmCordWindows.zip
                  path: windows

            - uses: actions/download-artifact@v2
              with:
                  name: ArmCordLinux.zip
                  path: linux

            - uses: actions/download-artifact@v2
              with:
                  name: ArmCordLinuxArm64.zip
                  path: linux

            - name: Get some values needed for the release
              id: vars
              shell: bash
              run: |
                echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

            - uses: dev-drprasad/delete-tag-and-release@v0.2.0
              with:
                delete_release: true
                tag_name: devbuild
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Create the release
              uses: softprops/action-gh-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: devbuild
                  name: Dev Build ${{ steps.vars.outputs.sha_short }}
                  draft: false
                  prerelease: true
                  body_path: .github/release.md
                  files: |
                      linux/ArmCord-3.1.0.zip
                      linux/ArmCord-3.1.0-arm64.zip
                      macos/ArmCord-3.1.0-mac.zip
                      windows/ArmCord-3.1.0-win.zip
